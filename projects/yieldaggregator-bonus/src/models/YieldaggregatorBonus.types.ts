/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  authority: string;
  stake_denom: string;
}
export type ExecuteMsg = {
  update_params: UpdateParamsMsg;
} | {
  register_bonus_window: RegisterBonusWindowMsg;
} | {
  delete_bonus_window: DeleteBonusWindowMsg;
} | {
  vote: VoteMsg;
} | {
  stake_vault_share: StakeVaultShareMsg;
};
export type Decimal = string;
export type Uint128 = string;
export type Timestamp = Uint64;
export type Uint64 = string;
export interface UpdateParamsMsg {
  authority?: string | null;
}
export interface RegisterBonusWindowMsg {
  apr_for_winners: Decimal[];
  budget_for_all: Uint128;
  denom: string;
  end_at: Timestamp;
  start_at: Timestamp;
}
export interface DeleteBonusWindowMsg {
  bonus_window_id: number;
}
export interface VoteMsg {
  bonus_window_id: number;
  vault_id: number;
}
export interface StakeVaultShareMsg {
  bonus_window_id: number;
  vault_id: number;
}
export type QueryMsg = {
  params: {};
} | {
  bonus_windows: {};
} | {
  voted_vaults: {
    bonus_window_id: number;
  };
} | {
  vault_share_staking: {
    address: string;
    bonus_window_id: number;
  };
} | {
  distribution_amount: {
    bonus_window_id: number;
  };
};
export type ArrayOfBonusWindow = BonusWindow[];
export interface BonusWindow {
  apr_for_winners: Decimal[];
  budget_for_all: Uint128;
  denom: string;
  end_at: Timestamp;
  id: number;
  start_at: Timestamp;
}
export type Addr = string;
export interface DistributionAmountResp {
  bonus_window_id: number;
  for_all: Distribution[];
  for_winners: Distribution[];
}
export interface Distribution {
  amount: Coin;
  recipient: Addr;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface Params {
  authority: Addr;
}
export type ArrayOfVaultShareStaking = VaultShareStaking[];
export interface VaultShareStaking {
  address: Addr;
  start_at: Timestamp;
  vault_id: number;
  vault_share: Uint128;
}
export type ArrayOfVotedVault = VotedVault[];
export interface VotedVault {
  bonus_window_id: number;
  vault_id: number;
  voted_amount: Uint128;
}